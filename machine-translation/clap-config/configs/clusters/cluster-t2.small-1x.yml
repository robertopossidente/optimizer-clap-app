setups:
  setup-initial:
    roles:
    - name: gan
    actions:
    - role: gan
      action: update-packages

  setup-update:
    actions:
    - role: gan
      action: run-command
      extra:
        cmd: sudo apt-get -y update && sudo apt-get upgrade

  setup-packages:
    actions:
    - role: gan
      action: install-packages
      extra:
        packages: python3-pip, build-essential, cmake,  openmpi-bin, openmpi-common, openmpi-doc, libopenmpi-dev

  setup-commands:
    actions:
    - role: gan
      action: run-command
      extra:
        cmd: sudo apt-get -y install python-is-python3
        
  setup-env:
    actions:
    - role: gan
      action: run-command
      extra:
        cmd: pip install gluonnlp  
        cmd: pip install mxnet 
        cmd: pip install sacremoses 
        cmd: pip install horovod --no-cache-dir        
        
  setup-git:
    actions:
    - role: gan
      action: run-command
      extra:
        cmd: git clone --branch train https://github.com/robertopossidente/AMLC19-GluonNLP.git

  setup-copy:
    actions:
    - role: gan
      action: copy
      extra:
        src: "/home/roberto/Distributed-DCGAN/AMLC19-GluonNLP/03_machine_translation/"
        dest: "/home/ubuntu/Transformer/"

  setup-dependences:
    actions:
    - role: gan
      action: run-command
      extra:
        cmd: cd AMLC19-GluonNLP/03_machine_translation/
        #cmd: pip install -r dependences_train.txt
        #cmd: pip install gluonnlp mxnet horovod[mxnet] sacremoses

  run-training:
    actions:
    - role: gan
      action: run-command
      extra:
        cmd: mpirun -np 2 -H localhost:2 -bind-to none -map-by slot python /home/ubuntu/AMLC19-GluonNLP/03_machine_translation/train.py --batch_size 32 --lr 2.0 --save_dir transformer_en_de_u512 --epochs 1
        #cmd: mpirun -np 2 -H localhost:2 -bind-to none -map-by slot python /home/ubuntu/AMLC19-GluonNLP/03_machine_translation/train.py --dataset WMT2014BPE --src_lang en --tgt_lang de --batch_size 2700 --optimizer adam --num_accumulated 16 --lr 2.0 --warmup_steps 4000 --save_dir transformer_en_de_u512 --epochs 1 --cpus 0,1 --scaled --average_start 5 --num_buckets 20 --bucket_scheme exp --bleu 13a --log_interval 10
  
        setup-master-ip:
    actions:
    - role: gan
      action: run-command
      extra:
        cmd: export MY_IP=$(curl -w "\n" -s https://api.ipify.org)

  setup-docker:
    actions:
    - role: gan
      action: run-command
      extra:
        cmd: sudo systemctl enable docker

  setup-gan:
    actions:
    - role: gan
      action: copy
      extra:
        src: "/home/ubuntu/Distributed-DCGAN/"
        dest: "/home/ubuntu/Distributed-DCGAN/"

  run-gan:
    actions:
    - role: gan
      action: run-command
      extra:
        cmd: sudo docker build -t dist_dcgan .
        cmd: sudo docker run --rm --network=host -v=$(pwd):/root dist_dcgan:latest python -m torch.distributed.launch --nproc_per_node=1 --nnodes=1 --node_rank=0 --master_addr=$(echo $MY_IP$) --master_port=1234 dist_dcgan.py --dataset cifar10 --dataroot ./cifar10 --num_epochs 1 --batch_size 16

clusters:
  example-cluster:
    #options:
    #  ssh_to: jobmanager

    nodes:
      jobmanager:
        type: type-small
        count: 1
        setups:
        - setup-initial

      #taskmanager:
      #  type: type-a
      #  count: 2
      #  min_count: 1
      #  setups:
      #  - setup-initial

    after:
    - setup-packages
    - setup-commands
    - setup-env
    - setup-git
    - run-training

